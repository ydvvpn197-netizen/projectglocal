var D=Object.defineProperty;var S=(h,t,n)=>t in h?D(h,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):h[t]=n;var p=(h,t,n)=>S(h,typeof t!="symbol"?t+"":t,n);var u=(h,t,n)=>new Promise((e,r)=>{var a=i=>{try{o(n.next(i))}catch(s){r(s)}},c=i=>{try{o(n.throw(i))}catch(s){r(s)}},o=i=>i.done?e(i.value):Promise.resolve(i.value).then(a,c);o((n=n.apply(h,t)).next())});import{s as g}from"./chunk-CasIWBEQ.js";import"./chunk-C4jjqBrH.js";import"./chunk-BlluHz2J.js";import"./chunk-DJzzOJWe.js";import"./chunk-COTa-BBv.js";import"./chunk-DvlvDbdf.js";import"./chunk-BA32w1ww.js";const m=class m{static getInstance(){return m.instance||(m.instance=new m),m.instance}analyzeTrends(){return u(this,arguments,function*(t="week",n=["topic","sentiment","engagement"]){try{const e=new Date,r=new Date;switch(t){case"day":r.setDate(r.getDate()-1);break;case"week":r.setDate(r.getDate()-7);break;case"month":r.setMonth(r.getMonth()-1);break}const a=[];for(const c of n){const o=yield this.analyzeTrendType(c,r,e);o&&a.push(o)}return yield this.storeTrends(a),a}catch(e){throw console.error("Error analyzing trends:",e),e}})}generatePredictions(t,n="short"){return u(this,null,function*(){try{const e=[],r=yield this.getHistoricalData(t);if(r.length===0)return e;const a=this.calculateTrendPredictions(r,t,n);e.push(...a);const c=this.calculateSeasonalPredictions(r,t,n);e.push(...c);const o=this.calculateGrowthPredictions(r,t,n);return e.push(...o),yield this.storePredictions(e),e}catch(e){throw console.error("Error generating predictions:",e),e}})}getCommunityAnalytics(t,n="daily",e,r){return u(this,null,function*(){try{let a=g.from("community_analytics").select("*").in("metric_name",t).eq("time_period",n);e&&(a=a.gte("calculated_at",e.toISOString())),r&&(a=a.lte("calculated_at",r.toISOString()));const{data:c,error:o}=yield a.order("calculated_at",{ascending:!1});if(o)throw o;return c||[]}catch(a){throw console.error("Error getting community analytics:",a),a}})}calculateTrendPredictions(t,n,e){const r=[];if(t.length<2)return r;const a=this.calculateTrendSlope(t),c=t.reduce((l,d)=>l+d.metric_value,0)/t.length,o=this.getHorizonDays(e),i=c+a*o,s=this.calculateTrendConfidence(t,a);return r.push({id:`trend_${n}_${Date.now()}`,prediction_type:n,prediction_target:`${n}_trend`,predicted_value:i,confidence_score:s,prediction_horizon:e,prediction_date:new Date(Date.now()+o*24*60*60*1e3),model_version:"trend_v1.0",metadata:{trend_slope:a,historical_average:c,data_points:t.length}}),r}calculateSeasonalPredictions(t,n,e){const r=[];if(t.length<7)return r;const a=this.calculateWeeklyPattern(t),c=this.getHorizonDays(e),o=(new Date().getDay()+c)%7,i=a[o]||0,s=this.calculateSeasonalConfidence(a);return r.push({id:`seasonal_${n}_${Date.now()}`,prediction_type:n,prediction_target:`${n}_seasonal`,predicted_value:i,confidence_score:s,prediction_horizon:e,prediction_date:new Date(Date.now()+c*24*60*60*1e3),model_version:"seasonal_v1.0",metadata:{weekly_pattern:a,target_day_of_week:o}}),r}calculateGrowthPredictions(t,n,e){const r=[];if(t.length<3)return r;const a=this.calculateGrowthRate(t),c=t[0].metric_value,o=this.getHorizonDays(e),i=c*Math.pow(1+a,o/30),s=this.calculateGrowthConfidence(t,a);return r.push({id:`growth_${n}_${Date.now()}`,prediction_type:n,prediction_target:`${n}_growth`,predicted_value:i,confidence_score:s,prediction_horizon:e,prediction_date:new Date(Date.now()+o*24*60*60*1e3),model_version:"growth_v1.0",metadata:{growth_rate:a,current_value:c,compound_periods:o/30}}),r}analyzeTrendType(t,n,e){return u(this,null,function*(){try{let r=[];switch(t){case"sentiment":r=yield this.getSentimentTrendData(n,e);break;case"engagement":r=yield this.getEngagementTrendData(n,e);break;case"topic":r=yield this.getTopicTrendData(n,e);break;case"location":r=yield this.getLocationTrendData(n,e);break;case"demographic":r=yield this.getDemographicTrendData(n,e);break;default:return null}if(r.length===0)return null;const a=this.calculateTrendScore(r),c=this.getTrendDirection(a),o=this.calculateTrendConfidence(r,a);return{trend_type:t,trend_name:`${t}_trend`,trend_description:`Analysis of ${t} trends in the community`,trend_score:a,trend_direction:c,confidence_level:o,geographic_scope:{},time_period_start:n,time_period_end:e,metadata:{data_points:r.length,analysis_timestamp:new Date().toISOString()}}}catch(r){return console.error(`Error analyzing ${t} trend:`,r),null}})}getHistoricalData(t){return u(this,null,function*(){const n=new Date,e=new Date;e.setMonth(e.getMonth()-3);const{data:r,error:a}=yield g.from("community_analytics").select("*").eq("metric_name",t).gte("calculated_at",e.toISOString()).lte("calculated_at",n.toISOString()).order("calculated_at",{ascending:!0});if(a)throw a;return r||[]})}storeTrends(t){return u(this,null,function*(){try{const{error:n}=yield g.from("community_trends").insert(t.map(e=>({trend_type:e.trend_type,trend_name:e.trend_name,trend_description:e.trend_description,trend_score:e.trend_score,trend_direction:e.trend_direction,confidence_level:e.confidence_level,geographic_scope:e.geographic_scope,time_period_start:e.time_period_start.toISOString(),time_period_end:e.time_period_end.toISOString(),metadata:e.metadata})));if(n)throw n}catch(n){throw console.error("Error storing trends:",n),n}})}storePredictions(t){return u(this,null,function*(){try{const{error:n}=yield g.from("community_predictions").insert(t.map(e=>({prediction_type:e.prediction_type,prediction_target:e.prediction_target,predicted_value:e.predicted_value,confidence_score:e.confidence_score,prediction_horizon:e.prediction_horizon,prediction_date:e.prediction_date.toISOString(),actual_value:e.actual_value,accuracy_score:e.accuracy_score,model_version:e.model_version,metadata:e.metadata})));if(n)throw n}catch(n){throw console.error("Error storing predictions:",n),n}})}calculateTrendSlope(t){if(t.length<2)return 0;const n=t.length,e=t.map((s,l)=>l),r=t.map(s=>s.metric_value),a=e.reduce((s,l)=>s+l,0),c=r.reduce((s,l)=>s+l,0),o=e.reduce((s,l,d)=>s+l*r[d],0),i=e.reduce((s,l)=>s+l*l,0);return(n*o-a*c)/(n*i-a*a)}calculateTrendConfidence(t,n){if(t.length<2)return 0;const e=t.length,r=t.map(d=>d.metric_value),a=r.reduce((d,_)=>d+_,0)/e,c=t.map((d,_)=>_),o=c.reduce((d,_)=>d+_,0)/e,i=r.reduce((d,_,f)=>{const y=n*(c[f]-o)+a;return d+Math.pow(_-y,2)},0),s=r.reduce((d,_)=>d+Math.pow(_-a,2),0),l=1-i/s;return Math.max(0,Math.min(1,l))}calculateWeeklyPattern(t){const n=new Array(7).fill(0),e=new Array(7).fill(0);return t.forEach(r=>{const c=new Date(r.calculated_at).getDay();n[c]+=r.metric_value,e[c]++}),n.map((r,a)=>e[a]>0?r/e[a]:0)}calculateSeasonalConfidence(t){const n=this.calculateVariance(t),e=t.reduce((a,c)=>a+c,0)/t.length,r=Math.sqrt(n)/Math.abs(e);return Math.max(0,Math.min(1,1-r))}calculateGrowthRate(t){if(t.length<2)return 0;const n=t[t.length-1].metric_value,e=t[0].metric_value,r=t.length;return Math.pow(e/n,1/r)-1}calculateGrowthConfidence(t,n){if(t.length<3)return 0;const e=t.map(i=>i.metric_value),r=e.map((i,s)=>e[e.length-1]*Math.pow(1+n,s)),a=e.reduce((i,s,l)=>i+Math.pow(s-r[l],2),0)/e.length,c=e.reduce((i,s)=>i+s,0)/e.length,o=a/(c*c);return Math.max(0,Math.min(1,1-o))}calculateTrendScore(t){if(t.length<2)return 0;const n=this.calculateTrendSlope(t),e=t.map(a=>a.metric_value),r=e.reduce((a,c)=>a+c,0)/e.length;return n/Math.abs(r)}getTrendDirection(t){return t>.1?"rising":t<-.1?"falling":"stable"}getHorizonDays(t){switch(t){case"short":return 7;case"medium":return 30;case"long":return 90;default:return 7}}calculateVariance(t){const n=t.reduce((e,r)=>e+r,0)/t.length;return t.reduce((e,r)=>e+Math.pow(r-n,2),0)/t.length}getSentimentTrendData(t,n){return u(this,null,function*(){const{data:e}=yield g.from("community_sentiment").select("*").gte("created_at",t.toISOString()).lte("created_at",n.toISOString());return e||[]})}getEngagementTrendData(t,n){return u(this,null,function*(){return[]})}getTopicTrendData(t,n){return u(this,null,function*(){return[]})}getLocationTrendData(t,n){return u(this,null,function*(){return[]})}getDemographicTrendData(t,n){return u(this,null,function*(){return[]})}};p(m,"instance");let w=m;export{w as TrendPredictionService};
