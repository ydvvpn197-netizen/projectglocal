var f=Object.defineProperty;var p=(c,e,t)=>e in c?f(c,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):c[e]=t;var y=(c,e,t)=>p(c,typeof e!="symbol"?e+"":e,t);var h=(c,e,t)=>new Promise((a,n)=>{var s=o=>{try{u(t.next(o))}catch(g){n(g)}},i=o=>{try{u(t.throw(o))}catch(g){n(g)}},u=o=>o.done?a(o.value):Promise.resolve(o.value).then(s,i);u((t=t.apply(c,e)).next())});import{s as d}from"./chunk-CasIWBEQ.js";import"./chunk-C4jjqBrH.js";import"./chunk-BlluHz2J.js";import"./chunk-DJzzOJWe.js";import"./chunk-COTa-BBv.js";import"./chunk-DvlvDbdf.js";import"./chunk-BA32w1ww.js";const l=class l{static getInstance(){return l.instance||(l.instance=new l),l.instance}getCommunitySentimentSummary(e="week"){return h(this,null,function*(){try{const t=new Date,a=this.getStartDate(e),{data:n,error:s}=yield d.from("community_sentiment").select("*").gte("created_at",a.toISOString()).lte("created_at",t.toISOString()).order("created_at",{ascending:!0});return s?(console.error("Error fetching sentiment data:",s),this.getDefaultSentimentData()):!n||n.length===0?this.getDefaultSentimentData():this.processSentimentData(n)}catch(t){return console.error("Error in getCommunitySentimentSummary:",t),this.getDefaultSentimentData()}})}getSentimentTrends(e="week"){return h(this,null,function*(){try{const t=new Date,a=this.getStartDate(e),{data:n,error:s}=yield d.from("community_sentiment").select("created_at, sentiment_score, confidence_score, content_type").gte("created_at",a.toISOString()).lte("created_at",t.toISOString()).order("created_at",{ascending:!0});return s||!n?(console.error("Error fetching sentiment trends:",s),[]):n.map(i=>({date:new Date(i.created_at).toISOString().split("T")[0],sentiment_score:i.sentiment_score,confidence:i.confidence_score,content_type:i.content_type}))}catch(t){return console.error("Error in getSentimentTrends:",t),[]}})}processSentimentData(e){const t=e.length,a=e.reduce((r,m)=>r+m.sentiment_score,0)/t,n=e.filter(r=>r.sentiment_label==="positive").length,s=e.filter(r=>r.sentiment_label==="negative").length,i=e.filter(r=>r.sentiment_label==="neutral").length,u={positive:Math.round(n/t*100),negative:Math.round(s/t*100),neutral:Math.round(i/t*100)},o=this.groupByDay(e),g=Object.entries(o).map(([r,m])=>({date:r,average_sentiment:m.reduce((_,S)=>_+S.sentiment_score,0)/m.length,count:m.length})).sort((r,m)=>r.date.localeCompare(m.date));return{total_analyses:t,average_sentiment:Math.round(a*100)/100,sentiment_distribution:u,sentiment_evolution:g}}groupByDay(e){return e.reduce((t,a)=>{const n=new Date(a.created_at).toISOString().split("T")[0];return t[n]||(t[n]=[]),t[n].push(a),t},{})}getStartDate(e){const t=new Date;switch(e){case"day":t.setDate(t.getDate()-1);break;case"week":t.setDate(t.getDate()-7);break;case"month":t.setMonth(t.getMonth()-1);break}return t}getDefaultSentimentData(){return{total_analyses:0,average_sentiment:0,sentiment_distribution:{positive:0,negative:0,neutral:0},sentiment_evolution:[]}}healthCheck(){return h(this,null,function*(){try{const{error:e}=yield d.from("community_sentiment").select("id").limit(1);return e?{healthy:!1,message:`Database error: ${e.message}`}:{healthy:!0,message:"Service is healthy"}}catch(e){return{healthy:!1,message:`Service error: ${e instanceof Error?e.message:"Unknown error"}`}}})}};y(l,"instance",null);let D=l;const C=D.getInstance();export{D as OptimizedSentimentService,C as optimizedSentimentService};
