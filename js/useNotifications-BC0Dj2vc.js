var T=Object.defineProperty,D=Object.defineProperties;var R=Object.getOwnPropertyDescriptors;var E=Object.getOwnPropertySymbols;var _=Object.prototype.hasOwnProperty,y=Object.prototype.propertyIsEnumerable;var A=(t,e,a)=>e in t?T(t,e,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[e]=a,r=(t,e)=>{for(var a in e||(e={}))_.call(e,a)&&A(t,a,e[a]);if(E)for(var a of E(e))y.call(e,a)&&A(t,a,e[a]);return t},c=(t,e)=>D(t,R(e));var w=(t,e,a)=>new Promise((N,b)=>{var k=u=>{try{h(a.next(u))}catch(C){b(C)}},p=u=>{try{h(a.throw(u))}catch(C){b(C)}},h=u=>u.done?N(u.value):Promise.resolve(u.value).then(k,p);h((a=a.apply(t,e)).next())});import{u as G,r as d}from"./main-B2Z1A0fl.js";import{n as g}from"./notificationService-BphN-zZk.js";const x=()=>{const{user:t}=G(),[e,a]=d.useState({generalNotifications:[],personalNotifications:[],counts:{general:0,personal:0,total:0},loading:!1,error:null}),N=d.useCallback(()=>w(void 0,null,function*(){a(s=>c(r({},s),{loading:!0,error:null}));try{if(!(t!=null&&t.id)){a(o=>c(r({},o),{generalNotifications:[],personalNotifications:[],counts:{general:0,personal:0,total:0},loading:!1}));return}const[s,n,i]=yield Promise.all([g.getGeneralNotifications(),g.getPersonalNotifications(t.id),g.getNotificationCounts(t.id)]);a(o=>c(r({},o),{generalNotifications:s,personalNotifications:n,counts:i,loading:!1}))}catch(s){a(n=>c(r({},n),{loading:!1,error:s instanceof Error?s.message:"Failed to load notifications"}))}}),[t==null?void 0:t.id]),b=d.useCallback(s=>w(void 0,null,function*(){if(!(t!=null&&t.id)){console.warn("Cannot mark notification as read: user not logged in");return}try{(yield g.markAsRead(s,t.id))&&a(i=>{const o=i.personalNotifications.map(f=>f.id===s?c(r({},f),{read:!0}):f),l=o.filter(f=>!f.read).length;return c(r({},i),{personalNotifications:o,counts:c(r({},i.counts),{personal:l,total:i.counts.general+l})})})}catch(n){console.error("Error marking notification as read:",n)}}),[t==null?void 0:t.id]),k=d.useCallback(()=>w(void 0,null,function*(){if(!(t!=null&&t.id)){console.warn("Cannot mark all notifications as read: user not logged in");return}try{(yield g.markAllAsRead(t.id))&&a(n=>{const i=n.personalNotifications.map(l=>c(r({},l),{read:!0})),o=i.filter(l=>!l.read).length;return c(r({},n),{personalNotifications:i,counts:c(r({},n.counts),{personal:o,total:n.counts.general+o})})})}catch(s){console.error("Error marking all notifications as read:",s)}}),[t==null?void 0:t.id]),p=d.useCallback(s=>w(void 0,null,function*(){if(!(t!=null&&t.id)){console.warn("Cannot delete notification: user not logged in");return}try{(yield g.deleteNotification(s,t.id))&&a(i=>{const o=i.personalNotifications.filter(f=>f.id!==s),l=o.filter(f=>!f.read).length;return c(r({},i),{personalNotifications:o,counts:c(r({},i.counts),{personal:l,total:i.counts.general+l})})})}catch(n){console.error("Error deleting notification:",n)}}),[t==null?void 0:t.id]),h=d.useCallback(()=>{N()},[N]),u=d.useCallback(()=>w(void 0,null,function*(){if(t!=null&&t.id)try{const s=yield g.getNotificationCounts(t.id);a(n=>c(r({},n),{counts:s}))}catch(s){console.error("Error refreshing notification counts:",s)}}),[t==null?void 0:t.id]),C=d.useCallback(s=>w(void 0,null,function*(){if(!(t!=null&&t.id)){console.warn("Cannot create notification: user not logged in");return}try{const n=yield g.createNotification(s);if(n)return yield N(),n}catch(n){throw console.error("Error creating notification:",n),n}}),[t==null?void 0:t.id,N]);d.useEffect(()=>{if(N(),!(t!=null&&t.id))return;const s=setInterval(()=>{u()},3e4),n=g.subscribeToNotifications(t.id,i=>{i.eventType==="INSERT"?i.table==="personal_notifications"?a(o=>c(r({},o),{personalNotifications:[i.new,...o.personalNotifications],counts:c(r({},o.counts),{personal:o.counts.personal+1,total:o.counts.total+1})})):i.table==="general_notifications"&&a(o=>c(r({},o),{generalNotifications:[i.new,...o.generalNotifications],counts:c(r({},o.counts),{general:o.counts.general+1,total:o.counts.total+1})})):i.eventType==="UPDATE"?i.table==="personal_notifications"&&a(o=>{const l=o.personalNotifications.map(m=>m.id===i.new.id?i.new:m),f=l.filter(m=>!m.read).length;return c(r({},o),{personalNotifications:l,counts:c(r({},o.counts),{personal:f,total:o.counts.general+f})})}):i.eventType==="DELETE"&&i.table==="personal_notifications"&&a(o=>{const l=o.personalNotifications.filter(m=>m.id!==i.old.id),f=l.filter(m=>!m.read).length;return c(r({},o),{personalNotifications:l,counts:c(r({},o.counts),{personal:f,total:o.counts.general+f})})})});return()=>{n(),clearInterval(s)}},[t==null?void 0:t.id,N,u]);const P=d.useCallback(()=>[...e.generalNotifications.map(n=>c(r({},n),{isGeneral:!0,read:!1})),...e.personalNotifications.map(n=>c(r({},n),{isGeneral:!1}))].sort((n,i)=>new Date(i.created_at).getTime()-new Date(n.created_at).getTime()),[e.generalNotifications,e.personalNotifications]);return{generalNotifications:e.generalNotifications,personalNotifications:e.personalNotifications,allNotifications:P(),counts:e.counts,loading:e.loading,error:e.error,markAsRead:b,markAllAsRead:k,deleteNotification:p,createNotification:C,refresh:h,refreshCounts:u,hasUnread:e.counts.total>0,hasUnreadPersonal:e.counts.personal>0,hasGeneralNotifications:e.counts.general>0,isAuthenticated:!!(t!=null&&t.id)}};export{x as u};
