var Z=Object.defineProperty,ee=Object.defineProperties;var te=Object.getOwnPropertyDescriptors;var M=Object.getOwnPropertySymbols;var se=Object.prototype.hasOwnProperty,ae=Object.prototype.propertyIsEnumerable;var B=(n,s,a)=>s in n?Z(n,s,{enumerable:!0,configurable:!0,writable:!0,value:a}):n[s]=a,R=(n,s)=>{for(var a in s||(s={}))se.call(s,a)&&B(n,a,s[a]);if(M)for(var a of M(s))ae.call(s,a)&&B(n,a,s[a]);return n},D=(n,s)=>ee(n,te(s));var C=(n,s,a)=>B(n,typeof s!="symbol"?s+"":s,a);var c=(n,s,a)=>new Promise((r,o)=>{var d=l=>{try{N(a.next(l))}catch(y){o(y)}},j=l=>{try{N(a.throw(l))}catch(y){o(y)}},N=l=>l.done?r(l.value):Promise.resolve(l.value).then(d,j);N((a=a.apply(n,s)).next())});import{s as f,u as ne,r as w,j as e,C as k,p as v,q as T,t as E,v as _,B as I,e as P}from"./main-B2Z1A0fl.js";import{B as S}from"./badge-CdNeXDip.js";import{u as ie}from"./useNotifications-BC0Dj2vc.js";import{n as h}from"./notificationService-BphN-zZk.js";import{B as F}from"./bell-BrPt3aXG.js";import{P as re,H as V}from"./plus-B4gpjJdq.js";import{C as oe}from"./clock-DJLknj0F.js";import{X as ce}from"./x-circle-B1e_uF_b.js";import{C as le}from"./check-circle-DcEt0i5B.js";const b=class b{constructor(){C(this,"lastCheck",null);C(this,"CHECK_INTERVAL",6e4);C(this,"checkTimer",null)}static getInstance(){return b.instance||(b.instance=new b),b.instance}performHealthCheck(){return c(this,null,function*(){const s={database:yield this.checkDatabase(),realtime:yield this.checkRealtime(),notifications:yield this.checkNotifications(),performance:yield this.checkPerformance()},a=this.determineOverallStatus(s),r=this.generateRecommendations(s),o={status:a,checks:s,timestamp:new Date().toISOString(),recommendations:r};return this.lastCheck=o,o})}checkDatabase(){return c(this,null,function*(){const s=Date.now();try{const{data:a,error:r}=yield f.from("personal_notifications").select("count").limit(1),o=Date.now()-s;if(r)return{status:"fail",message:`Database error: ${r.message}`,duration:o};const{data:d,error:j}=yield f.from("information_schema.tables").select("table_name").eq("table_schema","public").in("table_name",["personal_notifications","general_notifications"]);return j||!d||d.length<2?{status:"fail",message:"Notification tables missing or inaccessible",duration:o}:{status:"pass",message:`Database healthy (${o}ms)`,duration:o}}catch(a){return{status:"fail",message:`Database connection failed: ${a instanceof Error?a.message:"Unknown error"}`,duration:Date.now()-s}}})}checkRealtime(){return c(this,null,function*(){const s=Date.now();try{return new Promise(a=>{const r=setTimeout(()=>{a({status:"fail",message:"Real-time connection timeout",duration:Date.now()-s})},5e3),o=f.channel("health_check_test").on("system",{},d=>{clearTimeout(r),o.unsubscribe(),a(d==="SUBSCRIBED"?{status:"pass",message:`Real-time healthy (${Date.now()-s}ms)`,duration:Date.now()-s}:{status:"fail",message:`Real-time connection failed: ${d}`,duration:Date.now()-s})}).subscribe()})}catch(a){return{status:"fail",message:`Real-time check failed: ${a instanceof Error?a.message:"Unknown error"}`,duration:Date.now()-s}}})}checkNotifications(){return c(this,null,function*(){const s=Date.now();try{const a=yield h.getGeneralNotifications(5),r=yield h.getNotificationCounts(),o=Date.now()-s;return!Array.isArray(a)||typeof r!="object"?{status:"fail",message:"Notification service returned invalid data",duration:o}:{status:"pass",message:`Notifications working (${a.length} general, ${r.total} total)`,duration:o}}catch(a){return{status:"fail",message:`Notification service error: ${a instanceof Error?a.message:"Unknown error"}`,duration:Date.now()-s}}})}checkPerformance(){return c(this,null,function*(){const s=Date.now();try{const a=[h.getGeneralNotifications(10),h.getNotificationCounts(),f.from("personal_notifications").select("count").limit(1)];yield Promise.all(a);const r=Date.now()-s;return r>2e3?{status:"fail",message:`Performance degraded (${r}ms)`,duration:r}:{status:"pass",message:`Performance good (${r}ms)`,duration:r}}catch(a){return{status:"fail",message:`Performance check failed: ${a instanceof Error?a.message:"Unknown error"}`,duration:Date.now()-s}}})}determineOverallStatus(s){const a=Object.values(s).filter(o=>o.status==="fail").length,r=Object.keys(s).length;return a===0?"healthy":a<=r/2?"degraded":"unhealthy"}generateRecommendations(s){const a=[];return s.database.status==="fail"&&a.push("Check database connection and table structure"),s.realtime.status==="fail"&&a.push("Verify Supabase real-time configuration and network connectivity"),s.notifications.status==="fail"&&a.push("Review notification service implementation and error logs"),s.performance.status==="fail"&&a.push("Optimize database queries and consider adding indexes"),a.length===0&&a.push("System is operating normally"),a}startPeriodicChecks(){this.checkTimer&&clearInterval(this.checkTimer),this.checkTimer=setInterval(()=>c(this,null,function*(){try{yield this.performHealthCheck()}catch(s){console.error("Health check failed:",s)}}),this.CHECK_INTERVAL)}stopPeriodicChecks(){this.checkTimer&&(clearInterval(this.checkTimer),this.checkTimer=null)}getLastCheck(){return this.lastCheck}getStatusColor(s){switch(s){case"healthy":return"text-green-600 bg-green-100";case"degraded":return"text-yellow-600 bg-yellow-100";case"unhealthy":return"text-red-600 bg-red-100";default:return"text-gray-600 bg-gray-100"}}getStatusIcon(s){switch(s){case"healthy":return"✅";case"degraded":return"⚠️";case"unhealthy":return"❌";default:return"❓"}}};C(b,"instance");let q=b;const A=q.getInstance(),be=()=>{const{user:n}=ne(),{counts:s,refresh:a}=ie(),[r,o]=w.useState([]),[d,j]=w.useState(!1),[N,l]=w.useState("disconnected"),[y,L]=w.useState([]),[g,z]=w.useState(null),[H,U]=w.useState(!1),J=[{test:"Database Connection",status:"pending"},{test:"Create Personal Notification",status:"pending"},{test:"Create General Notification",status:"pending"},{test:"Mark as Read",status:"pending"},{test:"Delete Notification",status:"pending"},{test:"Real-time Subscription",status:"pending"},{test:"Notification Counts",status:"pending"},{test:"Error Handling",status:"pending"}],$=(t,i,m,u)=>{o(x=>x.map(O=>O.test===t?D(R({},O),{status:i,message:m,duration:u}):O))},p=(t,i)=>c(void 0,null,function*(){const m=Date.now();$(t,"running");try{const u=yield i(),x=Date.now()-m;return $(t,"passed",`Success: ${JSON.stringify(u)}`,x),u}catch(u){const x=Date.now()-m;throw $(t,"failed",`Error: ${u instanceof Error?u.message:"Unknown error"}`,x),u}}),K=()=>c(void 0,null,function*(){if(!(n!=null&&n.id)){alert("Please log in to run tests");return}j(!0),o(J);try{yield p("Database Connection",()=>c(void 0,null,function*(){const{data:t,error:i}=yield f.from("personal_notifications").select("count").limit(1);if(i)throw i;return{connected:!0,count:(t==null?void 0:t.length)||0}})),yield p("Create Personal Notification",()=>c(void 0,null,function*(){const t=yield h.createPersonalNotification(n.id,"Test Notification","This is a test notification for system verification","system_announcement",{test:!0,timestamp:new Date().toISOString()});if(!t)throw new Error("Failed to create notification");return{notificationId:t}})),yield p("Create General Notification",()=>c(void 0,null,function*(){const{data:t,error:i}=yield f.from("general_notifications").insert({title:"Test General Notification",message:"This is a test general notification",type:"system",priority:"low",target_audience:"all"}).select("id").single();if(i)throw i;return{notificationId:t.id}})),yield p("Mark as Read",()=>c(void 0,null,function*(){const{data:t}=yield f.from("personal_notifications").select("id").eq("user_id",n.id).eq("read",!1).limit(1);if(!t||t.length===0)return{skipped:"No unread notifications to mark"};const i=yield h.markAsRead(t[0].id,n.id);if(!i)throw new Error("Failed to mark notification as read");return{success:i}})),yield p("Delete Notification",()=>c(void 0,null,function*(){const{data:t}=yield f.from("personal_notifications").select("id").eq("user_id",n.id).like("title","Test%").limit(1);if(!t||t.length===0)return{skipped:"No test notifications to delete"};const i=yield h.deleteNotification(t[0].id,n.id);if(!i)throw new Error("Failed to delete notification");return{success:i}})),yield p("Real-time Subscription",()=>c(void 0,null,function*(){return new Promise((t,i)=>{const m=setTimeout(()=>{i(new Error("Real-time subscription timeout"))},1e4),u=f.channel("test_notifications").on("postgres_changes",{event:"INSERT",schema:"public",table:"personal_notifications",filter:`user_id=eq.${n.id}`},x=>{clearTimeout(m),u.unsubscribe(),t({realtimeWorking:!0,payload:x})}).subscribe();setTimeout(()=>c(void 0,null,function*(){try{yield h.createPersonalNotification(n.id,"Real-time Test","Testing real-time functionality","system_announcement")}catch(x){clearTimeout(m),u.unsubscribe(),i(x)}}),1e3)})})),yield p("Notification Counts",()=>c(void 0,null,function*(){const t=yield h.getNotificationCounts(n.id);if(t.total<0)throw new Error("Invalid count values");return t})),yield p("Error Handling",()=>c(void 0,null,function*(){try{throw yield h.createPersonalNotification("invalid-user-id","Test","Test","system_announcement"),new Error("Should have failed with invalid user ID")}catch(t){return{errorHandlingWorking:!0}}}))}catch(t){console.error("Test suite failed:",t)}finally{j(!1)}}),G=w.useCallback(()=>{if(!(n!=null&&n.id))return;l("connecting");const t=f.channel("notification_monitoring").on("postgres_changes",{event:"*",schema:"public",table:"personal_notifications",filter:`user_id=eq.${n.id}`},i=>{L(m=>[D(R({},i),{timestamp:new Date().toISOString()}),...m.slice(0,9)])}).on("postgres_changes",{event:"*",schema:"public",table:"general_notifications"},i=>{L(m=>[D(R({},i),{timestamp:new Date().toISOString()}),...m.slice(0,9)])}).subscribe(i=>{i==="SUBSCRIBED"?l("connected"):i==="CHANNEL_ERROR"&&l("disconnected")});return()=>{t.unsubscribe(),l("disconnected")}},[n==null?void 0:n.id]);w.useEffect(()=>G(),[G]);const W=()=>c(void 0,null,function*(){n!=null&&n.id&&(yield h.createPersonalNotification(n.id,"Manual Test Notification","This notification was created manually for testing","system_announcement",{manual:!0,timestamp:new Date().toISOString()}))}),X=()=>c(void 0,null,function*(){U(!0);try{const t=yield A.performHealthCheck();z(t)}catch(t){console.error("Health check failed:",t)}finally{U(!1)}}),Q=t=>{switch(t){case"passed":return e.jsx(le,{className:"h-4 w-4 text-green-500"});case"failed":return e.jsx(ce,{className:"h-4 w-4 text-red-500"});case"running":return e.jsx(P,{className:"h-4 w-4 text-blue-500 animate-spin"});default:return e.jsx(oe,{className:"h-4 w-4 text-gray-400"})}},Y=t=>{switch(t){case"passed":return"bg-green-100 text-green-800";case"failed":return"bg-red-100 text-red-800";case"running":return"bg-blue-100 text-blue-800";default:return"bg-gray-100 text-gray-800"}};return n?e.jsxs("div",{className:"space-y-6",children:[e.jsxs(k,{children:[e.jsxs(v,{children:[e.jsxs(T,{className:"flex items-center gap-2",children:[e.jsx(F,{className:"h-5 w-5"}),"Notification System Test Suite"]}),e.jsx(E,{children:"Comprehensive testing of the notification system including real-time functionality"})]}),e.jsxs(_,{className:"space-y-4",children:[e.jsxs("div",{className:"flex gap-2",children:[e.jsxs(I,{onClick:K,disabled:d,className:"flex items-center gap-2",children:[d?e.jsx(P,{className:"h-4 w-4 animate-spin"}):e.jsx(F,{className:"h-4 w-4"}),d?"Running Tests...":"Run All Tests"]}),e.jsxs(I,{onClick:W,variant:"outline",className:"flex items-center gap-2",children:[e.jsx(re,{className:"h-4 w-4"}),"Create Test Notification"]}),e.jsxs(I,{onClick:a,variant:"outline",className:"flex items-center gap-2",children:[e.jsx(P,{className:"h-4 w-4"}),"Refresh"]}),e.jsxs(I,{onClick:X,variant:"outline",disabled:H,className:"flex items-center gap-2",children:[H?e.jsx(P,{className:"h-4 w-4 animate-spin"}):e.jsx(V,{className:"h-4 w-4"}),H?"Checking...":"Health Check"]})]}),e.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-3 gap-4",children:[e.jsxs("div",{className:"text-center p-4 border rounded-lg",children:[e.jsx("div",{className:"text-2xl font-bold text-blue-600",children:s.personal}),e.jsx("div",{className:"text-sm text-muted-foreground",children:"Personal Notifications"})]}),e.jsxs("div",{className:"text-center p-4 border rounded-lg",children:[e.jsx("div",{className:"text-2xl font-bold text-green-600",children:s.general}),e.jsx("div",{className:"text-sm text-muted-foreground",children:"General Notifications"})]}),e.jsxs("div",{className:"text-center p-4 border rounded-lg",children:[e.jsx("div",{className:"text-2xl font-bold text-purple-600",children:s.total}),e.jsx("div",{className:"text-sm text-muted-foreground",children:"Total Notifications"})]})]})]})]}),g&&e.jsxs(k,{children:[e.jsxs(v,{children:[e.jsxs(T,{className:"flex items-center gap-2",children:[e.jsx(V,{className:"h-5 w-5"}),"System Health Check",e.jsxs(S,{className:A.getStatusColor(g.status),children:[A.getStatusIcon(g.status)," ",g.status]})]}),e.jsxs(E,{children:["Last checked: ",new Date(g.timestamp).toLocaleString()]})]}),e.jsxs(_,{children:[e.jsx("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4",children:Object.entries(g.checks).map(([t,i])=>e.jsxs("div",{className:"p-3 border rounded-lg",children:[e.jsxs("div",{className:"flex items-center justify-between mb-2",children:[e.jsx("span",{className:"font-medium capitalize",children:t}),e.jsxs(S,{className:i.status==="pass"?"bg-green-100 text-green-800":"bg-red-100 text-red-800",children:[i.status==="pass"?"✅":"❌"," ",i.status]})]}),e.jsx("p",{className:"text-sm text-muted-foreground",children:i.message}),e.jsxs("p",{className:"text-xs text-muted-foreground mt-1",children:["Duration: ",i.duration,"ms"]})]},t))}),g.recommendations&&g.recommendations.length>0&&e.jsxs("div",{className:"mt-4 p-3 bg-muted rounded-lg",children:[e.jsx("h4",{className:"font-medium mb-2",children:"Recommendations:"}),e.jsx("ul",{className:"text-sm space-y-1",children:g.recommendations.map((t,i)=>e.jsxs("li",{className:"flex items-start gap-2",children:[e.jsx("span",{className:"text-muted-foreground",children:"•"}),e.jsx("span",{children:t})]},i))})]})]})]}),e.jsxs(k,{children:[e.jsx(v,{children:e.jsx(T,{children:"Test Results"})}),e.jsx(_,{children:e.jsx("div",{className:"space-y-2",children:r.map((t,i)=>e.jsxs("div",{className:"flex items-center justify-between p-3 border rounded-lg",children:[e.jsxs("div",{className:"flex items-center gap-3",children:[Q(t.status),e.jsx("span",{className:"font-medium",children:t.test})]}),e.jsxs("div",{className:"flex items-center gap-2",children:[e.jsx(S,{className:Y(t.status),children:t.status}),t.duration&&e.jsxs("span",{className:"text-sm text-muted-foreground",children:[t.duration,"ms"]})]})]},i))})})]}),e.jsxs(k,{children:[e.jsxs(v,{children:[e.jsxs(T,{className:"flex items-center gap-2",children:["Real-time Status:",e.jsx(S,{className:N==="connected"?"bg-green-100 text-green-800":N==="connecting"?"bg-yellow-100 text-yellow-800":"bg-red-100 text-red-800",children:N})]}),e.jsx(E,{children:"Live monitoring of real-time notification events"})]}),e.jsx(_,{children:e.jsx("div",{className:"space-y-2 max-h-64 overflow-y-auto",children:y.length===0?e.jsx("p",{className:"text-muted-foreground text-center py-4",children:"No real-time events yet. Create a notification to see events here."}):y.map((t,i)=>e.jsxs("div",{className:"p-3 border rounded-lg bg-muted/50",children:[e.jsxs("div",{className:"flex items-center justify-between mb-2",children:[e.jsx(S,{variant:"outline",children:t.eventType}),e.jsx("span",{className:"text-xs text-muted-foreground",children:new Date(t.timestamp).toLocaleTimeString()})]}),e.jsxs("div",{className:"text-sm",children:[e.jsx("strong",{children:"Table:"})," ",t.table]}),t.new&&e.jsxs("div",{className:"text-sm mt-1",children:[e.jsx("strong",{children:"Data:"})," ",JSON.stringify(t.new,null,2)]})]},i))})})]})]}):e.jsx(k,{children:e.jsxs(v,{children:[e.jsx(T,{children:"Notification System Test"}),e.jsx(E,{children:"Please log in to run notification system tests"})]})})};export{be as NotificationSystemTest};
