var l=(y,t,e)=>new Promise((r,n)=>{var a=p=>{try{d(e.next(p))}catch(w){n(w)}},s=p=>{try{d(e.throw(p))}catch(w){n(w)}},d=p=>p.done?r(p.value):Promise.resolve(p.value).then(a,s);d((e=e.apply(y,t)).next())});import{r as b}from"./chunk-COTa-BBv.js";import{s as c}from"./chunk-CasIWBEQ.js";import{a as S,u as k}from"./main-BEfTDqLJ.js";import{u as q}from"./chunk-Cv-qEgNt.js";class P{static getUserPoints(t){return l(this,null,function*(){try{const{data:e,error:r}=yield c.from("user_points").select("*").eq("user_id",t).single();if(r)throw r;return e}catch(e){return console.error("Error fetching user points:",e),null}})}static addPoints(t,e,r,n,a){return l(this,null,function*(){try{const{data:s,error:d}=yield c.rpc("add_user_points",{p_user_id:t,p_points:e,p_transaction_type:r,p_description:n||"",p_metadata:a||null});if(d)throw d;return!0}catch(s){return console.error("Error adding points:",s),!1}})}static getCurrentUserPoints(){return l(this,null,function*(){try{const{data:{user:t}}=yield c.auth.getUser();if(!t)throw new Error("User not authenticated");return yield this.getUserPoints(t.id)}catch(t){return console.error("Error fetching current user points:",t),null}})}static getLeaderboard(t){return l(this,null,function*(){try{let e=c.from("community_leaderboard").select("*").order("rank",{ascending:!0});t!=null&&t.limit&&(e=e.limit(t.limit)),t!=null&&t.offset&&(e=e.range(t.offset,t.offset+(t.limit||100)-1)),t!=null&&t.min_points&&(e=e.gte("total_points",t.min_points));const{data:r,error:n}=yield e;return n?(console.error("Database error fetching leaderboard:",n),yield this.getLeaderboardFallback(t)):r||[]}catch(e){return console.error("Error fetching leaderboard:",e),yield this.getLeaderboardFallback(t)}})}static getLeaderboardFallback(t){return l(this,null,function*(){try{let e=c.from("user_points").select(`
          user_id,
          total_points,
          rank,
          profiles:user_id (
            display_name,
            avatar_url
          )
        `).order("total_points",{ascending:!1});t!=null&&t.limit&&(e=e.limit(t.limit)),t!=null&&t.offset&&(e=e.range(t.offset,t.offset+(t.limit||100)-1)),t!=null&&t.min_points&&(e=e.gte("total_points",t.min_points));const{data:r,error:n}=yield e;if(n)throw n;return(r||[]).map(a=>{var s,d;return{id:a.user_id,user_id:a.user_id,display_name:(s=a.profiles)==null?void 0:s.display_name,avatar_url:(d=a.profiles)==null?void 0:d.avatar_url,total_points:a.total_points,rank:a.rank,last_updated:new Date().toISOString()}})}catch(e){return console.error("Error fetching leaderboard fallback:",e),[]}})}static getTopUsers(t=5){return l(this,null,function*(){return yield this.getLeaderboard({limit:t})})}static getPointHistory(t,e){return l(this,null,function*(){try{let r=c.from("point_transactions").select("*").eq("user_id",t).order("created_at",{ascending:!1});e!=null&&e.transaction_type&&(r=r.eq("transaction_type",e.transaction_type)),e!=null&&e.date_from&&(r=r.gte("created_at",e.date_from)),e!=null&&e.date_to&&(r=r.lte("created_at",e.date_to)),e!=null&&e.limit&&(r=r.limit(e.limit)),e!=null&&e.offset&&(r=r.range(e.offset,e.offset+(e.limit||100)-1));const{data:n,error:a}=yield r;if(a)throw a;return n||[]}catch(r){return console.error("Error fetching point history:",r),[]}})}static getCurrentUserPointHistory(t){return l(this,null,function*(){try{const{data:{user:e}}=yield c.auth.getUser();if(!e)throw new Error("User not authenticated");return yield this.getPointHistory(e.id,t)}catch(e){return console.error("Error fetching current user point history:",e),[]}})}static addPointsWithReference(t,e,r,n,a,s){return l(this,null,function*(){try{const{data:d,error:p}=yield c.rpc("add_user_points",{p_user_id:t,p_points:e,p_transaction_type:r,p_reference_id:n,p_reference_type:a,p_description:s});if(p)throw p;return d}catch(d){return console.error("Error adding points:",d),!1}})}static handleEventAttendance(t,e){return l(this,null,function*(){try{const{data:r,error:n}=yield c.rpc("handle_event_points",{p_event_id:t,p_user_id:e,p_action:"attended"});if(n)throw n;return r}catch(r){return console.error("Error handling event attendance points:",r),!1}})}static handleEventOrganization(t,e){return l(this,null,function*(){try{const{data:r,error:n}=yield c.rpc("handle_event_points",{p_event_id:t,p_user_id:e,p_action:"organized"});if(n)throw n;return r}catch(r){return console.error("Error handling event organization points:",r),!1}})}static handlePollCreation(t,e){return l(this,null,function*(){try{const{data:r,error:n}=yield c.rpc("handle_poll_points",{p_poll_id:t,p_user_id:e,p_action:"created"});if(n)throw n;return r}catch(r){return console.error("Error handling poll creation points:",r),!1}})}static handlePostSharing(t,e){return l(this,null,function*(){try{const{data:r,error:n}=yield c.rpc("handle_share_points",{p_post_id:t,p_user_id:e});if(n)throw n;return r}catch(r){return console.error("Error handling post sharing points:",r),!1}})}static getCurrentUserPointsSummary(){return l(this,null,function*(){try{const{data:{user:t}}=yield c.auth.getUser();if(!t)throw new Error("User not authenticated");const[e,r]=yield Promise.all([this.getUserPoints(t.id),this.getPointHistory(t.id,{limit:10})]);if(!e)return null;const n={};return r.forEach(a=>{const s=a.transaction_type;n[s]=(n[s]||0)+a.points}),{totalPoints:e.total_points,rank:e.rank,recentTransactions:r,pointsBreakdown:n}}catch(t){return console.error("Error fetching points summary:",t),null}})}static getLeaderboardWithUserPosition(t,e=100){return l(this,null,function*(){try{const[r,n]=yield Promise.all([this.getLeaderboard({limit:e}),this.getUserPoints(t)]),a=(n==null?void 0:n.rank)||0,s=r.find(d=>d.user_id===t);return{leaderboard:r,userPosition:a,userEntry:s}}catch(r){return console.error("Error fetching leaderboard with user position:",r),{leaderboard:[],userPosition:0}}})}static refreshLeaderboardRanks(){return l(this,null,function*(){try{const{data:t,error:e}=yield c.rpc("refresh_all_leaderboard_ranks");if(e)throw e;return!0}catch(t){return console.error("Error refreshing leaderboard ranks:",t),!1}})}static getPointsStatistics(){return l(this,null,function*(){try{const[{count:t},{data:e},{data:r},{count:n}]=yield Promise.all([c.from("user_points").select("*",{count:"exact",head:!0}),c.from("user_points").select("total_points"),c.from("community_leaderboard").select("*").order("total_points",{ascending:!1}).limit(1).single(),c.from("point_transactions").select("*",{count:"exact",head:!0}).gte("created_at",new Date(Date.now()-864e5).toISOString())]),a=(e==null?void 0:e.reduce((d,p)=>d+p.total_points,0))||0,s=t?Math.round(a/t):0;return{totalUsers:t||0,totalPoints:a,averagePoints:s,topUser:r||null,recentActivity:n||0}}catch(t){return console.error("Error fetching points statistics:",t),{totalUsers:0,totalPoints:0,averagePoints:0,topUser:null,recentActivity:0}}})}}const R=()=>{const[y,t]=b.useState([]),[e,r]=b.useState(!0),{user:n}=S(),{toast:a}=k(),{currentLocation:s}=q(),d=b.useCallback(()=>l(null,null,function*(){var i,u,_,v,h,m,E,f;try{r(!0),console.log("Fetching events with function: get_events_with_attendance"),console.log("Supabase client initialized:",!!c),console.log("Current user auth state:",n?"authenticated":"unauthenticated");const{data:o,error:g}=yield c.rpc("get_events_with_attendance");if(g)throw console.error("Supabase RPC error details:",{message:g.message,details:g.details,hint:g.hint,code:g.code}),g;console.log("Events fetched successfully:",(o==null?void 0:o.length)||0,"events"),t(o||[])}catch(o){console.error("Error fetching events - Full error object:",o);let g="Failed to fetch events";(i=o==null?void 0:o.message)!=null&&i.includes("function")&&((u=o==null?void 0:o.message)!=null&&u.includes("does not exist"))?g="Database function not found. Please contact support.":(o==null?void 0:o.code)==="PGRST116"?g="Database function error. Please try again.":(_=o==null?void 0:o.message)!=null&&_.includes("JWT")?g="Authentication issue. Please try signing in again.":(v=o==null?void 0:o.message)!=null&&v.includes("network")||(h=o==null?void 0:o.message)!=null&&h.includes("fetch")||(m=o==null?void 0:o.message)!=null&&m.includes("NetworkError")?g="Network error. Please check your connection and try again.":(o==null?void 0:o.code)==="42883"?g="Database configuration error. Please contact support.":(o==null?void 0:o.code)==="42P01"?g="Database table not found. Please contact support.":(E=o==null?void 0:o.message)!=null&&E.includes("404")?g="Service endpoint not found. Please contact support.":(f=o==null?void 0:o.message)!=null&&f.includes("500")&&(g="Server error. Please try again in a few moments."),a({title:"Error",description:g,variant:"destructive"}),t([])}finally{r(!1)}}),[a,n]),p=i=>l(null,null,function*(){var v;if(!n)return a({title:"Error",description:"You must be logged in to create events",variant:"destructive"}),!1;console.log("Creating event with data:",i),console.log("User ID:",n.id),console.log("User object:",n);const{data:{session:u},error:_}=yield c.auth.getSession();if(_)return console.error("Session error:",_),a({title:"Authentication Error",description:"Please sign in again",variant:"destructive"}),!1;if(!u)return console.error("No active session found"),a({title:"Authentication Error",description:"Please sign in again",variant:"destructive"}),!1;console.log("Active session:",u.user.id);try{console.log("Testing database access...");const{data:h,error:m}=yield c.from("events").select("id").limit(1);if(m)throw console.error("Database access test failed:",m),new Error(`Database access denied: ${m.message}`);if(console.log("Database access test successful"),!i.title.trim())throw new Error("Event title is required");if(!i.event_date)throw new Error("Event date is required");if(!i.event_time)throw new Error("Event time is required");if(!i.location_name.trim())throw new Error("Event location is required");const E={user_id:u.user.id,title:i.title.trim(),description:((v=i.description)==null?void 0:v.trim())||null,event_date:i.event_date,event_time:i.event_time,location_name:i.location_name.trim(),location_city:(s==null?void 0:s.city)||null,location_state:(s==null?void 0:s.state)||null,location_country:(s==null?void 0:s.country)||null,latitude:(s==null?void 0:s.latitude)||null,longitude:(s==null?void 0:s.longitude)||null,category:i.category||null,max_attendees:i.max_attendees||null,price:i.price||0,image_url:i.image_url||null,tags:i.tags||null,government_authority_id:i.government_authority_id||null,target_authority:i.target_authority||null};console.log("Inserting event data:",E),console.log("Using session user ID:",u.user.id);const{error:f}=yield c.from("events").insert(E);if(f)throw console.error("Supabase insert error:",f),f;console.log("Event inserted successfully");const{data:o,error:g}=yield c.from("events").select("id").eq("user_id",u.user.id).eq("title",i.title.trim()).order("created_at",{ascending:!1}).limit(1).single();if(g?console.warn("Could not retrieve inserted event:",g):console.log("Retrieved inserted event:",o),o&&o.id)try{yield P.handleEventOrganization(o.id,u.user.id)}catch(U){console.warn("Failed to award points for event creation:",U)}return a({title:"Success",description:"Event created successfully!"}),d(),!0}catch(h){console.error("Error creating event:",h);let m="Failed to create event";return h instanceof Error?m=h.message:typeof h=="object"&&h!==null&&"message"in h&&(m=String(h.message)),a({title:"Error",description:m,variant:"destructive"}),!1}}),w=i=>l(null,null,function*(){if(!n){a({title:"Error",description:"You must be logged in to attend events",variant:"destructive"});return}try{const u=y.find(_=>_.id===i);if(!u)return;if(u.user_attending){const{error:_}=yield c.from("event_attendees").delete().eq("event_id",i).eq("user_id",n.id);if(_)throw _;a({title:"Success",description:"You're no longer attending this event"})}else{const{error:_}=yield c.from("event_attendees").insert({event_id:i,user_id:n.id,status:"attending"});if(_)throw _;a({title:"Success",description:"You're now attending this event!"}),yield P.handleEventAttendance(i,n.id)}d()}catch(u){console.error("Error toggling attendance:",u),a({title:"Error",description:"Failed to update attendance",variant:"destructive"})}});return b.useEffect(()=>{d()},[n,d]),b.useEffect(()=>{const i=c.channel("events-changes").on("postgres_changes",{event:"*",schema:"public",table:"events"},()=>{d()}).subscribe();return()=>{c.removeChannel(i)}},[d]),{events:y,loading:e,createEvent:p,toggleAttendance:w,deleteEvent:i=>l(null,null,function*(){if(!n)return{error:new Error("Not authenticated")};try{const{error:u}=yield c.from("events").delete().eq("id",i).eq("user_id",n.id);if(u)throw u;return a({title:"Event deleted",description:"Your event has been deleted successfully."}),d(),{error:null}}catch(u){return a({title:"Error deleting event",description:u.message,variant:"destructive"}),{error:u}}}),refetch:d}};export{R as u};
