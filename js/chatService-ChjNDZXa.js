var d=(u,t,r)=>new Promise((s,e)=>{var i=o=>{try{c(r.next(o))}catch(l){e(l)}},n=o=>{try{c(r.throw(o))}catch(l){e(l)}},c=o=>o.done?s(o.value):Promise.resolve(o.value).then(i,n);c((r=r.apply(u,t)).next())});import{s as a}from"./main-B2Z1A0fl.js";class _{static getOrCreateConversationForBooking(t){return d(this,null,function*(){try{const{data:r,error:s}=yield a.from("chat_conversations").select("id").eq("booking_id",t).single();if(r)return r.id;const{data:e,error:i}=yield a.from("artist_bookings").select(`
          id,
          user_id,
          artist_id,
          status
        `).eq("id",t).single();if(i||!e)return console.error("Error fetching booking details:",i),null;if(e.status!=="accepted")return console.warn("Cannot create chat conversation for non-accepted booking"),null;const{data:n,error:c}=yield a.from("artists").select("user_id").eq("id",e.artist_id).single();if(c||!n)return console.error("Error fetching artist details:",c),null;const{data:o,error:l}=yield a.from("chat_conversations").insert({booking_id:t,client_id:e.user_id,artist_id:n.user_id,status:"active"}).select("id").single();return l?(console.error("Error creating chat conversation:",l),null):o.id}catch(r){return console.error("Error in getOrCreateConversationForBooking:",r),null}})}static canUserChatWithArtist(t,r){return d(this,null,function*(){try{const{data:s,error:e}=yield a.from("artists").select("id").eq("user_id",r).single();if(e||!s)return console.error("Error fetching artist record:",e),!1;const{data:i,error:n}=yield a.from("artist_bookings").select("id, status").eq("user_id",t).eq("artist_id",s.id).eq("status","accepted").single();return!(n||!i)}catch(s){return console.error("Error checking chat permissions:",s),!1}})}static getUserConversations(t){return d(this,null,function*(){try{const{data:r,error:s}=yield a.from("chat_conversations").select("*").or(`client_id.eq.${t},artist_id.eq.${t}`).order("updated_at",{ascending:!1});return s?(console.error("Error fetching user conversations:",s),[]):r||[]}catch(r){return console.error("Error in getUserConversations:",r),[]}})}static createWelcomeMessage(t,r,s){return d(this,null,function*(){try{const{error:e}=yield a.from("chat_messages").insert({conversation_id:t,sender_id:r,message:`Hello! I've accepted your booking request for ${s}. Let's discuss the details!`,message_type:"text"});return e?(console.error("Error creating welcome message:",e),!1):!0}catch(e){return console.error("Error in createWelcomeMessage:",e),!1}})}}export{_ as C};
