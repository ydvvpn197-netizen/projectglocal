var a=(n,o,e)=>new Promise((r,s)=>{var t=l=>{try{i(e.next(l))}catch(c){s(c)}},u=l=>{try{i(e.throw(l))}catch(c){s(c)}},i=l=>l.done?r(l.value):Promise.resolve(l.value).then(t,u);i((e=e.apply(n,o)).next())});import{c as h}from"./chunk-C4jjqBrH.js";const d="https://tepvzhbgobckybyhryuj.supabase.co",m="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InRlcHZ6aGJnb2Jja3lieWhyeXVqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQzODIzNzQsImV4cCI6MjA2OTk1ODM3NH0.RBtDkdzRu-rgRs-kYHj9zlChhqO7lLvrnnVR2vBwji4";let p,b;const y=()=>{try{if(d&&m)return h(d,m,{auth:{persistSession:!0,autoRefreshToken:!0,detectSessionInUrl:!0}})}catch(n){return console.warn("Failed to initialize Supabase client, using mock implementation:",n),null}};try{const n=y();if(n)p=n,b=n;else throw new Error("Supabase initialization failed")}catch(n){console.warn("Supabase initialization failed, using mock implementation:",n);const o={auth:{getUser:()=>a(null,null,function*(){return{data:{user:null},error:null}}),getSession:()=>a(null,null,function*(){return{data:{session:null},error:null}}),onAuthStateChange:e=>({data:{subscription:{unsubscribe:()=>{}}}}),signUp:e=>a(null,null,function*(){return{data:{user:null,session:null},error:null}}),signInWithPassword:e=>a(null,null,function*(){return{data:{user:null,session:null},error:null}}),signInWithOAuth:e=>a(null,null,function*(){return{data:{url:""},error:null}}),signOut:()=>a(null,null,function*(){return{error:null}}),resetPasswordForEmail:(e,r)=>a(null,null,function*(){return{error:null}}),updateUser:e=>a(null,null,function*(){return{data:{user:null},error:null}})},from:e=>({select:r=>({eq:(s,t)=>({single:()=>Promise.resolve({data:null,error:null}),order:(u,i)=>Promise.resolve({data:[],error:null})}),is:(s,t)=>({order:(u,i)=>Promise.resolve({data:[],error:null})}),order:(s,t)=>Promise.resolve({data:[],error:null})}),insert:r=>({select:s=>({single:()=>Promise.resolve({data:null,error:null})})}),update:r=>({eq:(s,t)=>Promise.resolve({error:null})}),delete:()=>({eq:(r,s)=>Promise.resolve({error:null})})}),rpc:(e,r)=>Promise.resolve({data:[],error:null}),raw:(e,r)=>r||[]};p=o,b=o}const v=(n,o,e)=>a(null,null,function*(){try{return{data:yield n(),error:null}}catch(r){return console.error(e,r),{data:o,error:r}}}),S=()=>navigator.onLine?"connected":"offline",z=()=>a(null,null,function*(){return navigator.onLine});export{z as f,S as g,b as r,p as s,v as w};
