var e=Object.defineProperty,a=Object.defineProperties,s=Object.getOwnPropertyDescriptors,t=Object.getOwnPropertySymbols,r=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable,l=(a,s,t)=>s in a?e(a,s,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[s]=t,n=(e,a)=>{for(var s in a||(a={}))r.call(a,s)&&l(e,s,a[s]);if(t)for(var s of t(a))o.call(a,s)&&l(e,s,a[s]);return e},i=(e,t)=>a(e,s(t)),c=(e,a)=>{var s={};for(var l in e)r.call(e,l)&&a.indexOf(l)<0&&(s[l]=e[l]);if(null!=e&&t)for(var l of t(e))a.indexOf(l)<0&&o.call(e,l)&&(s[l]=e[l]);return s};import{r as d,j as p,k as f,i as m,l as u,D as g,R as React,f as N,w as y}from"./index-B5IYdG7F.js";import{c as x,R as v,T as D,P as A,W as _,a as j,b,D as w,d as h,O as R}from"./index-DD_J5sPn.js";var O="AlertDialog",[P,z]=m(O,[x]),F=x(),I=e=>{const a=e,{__scopeAlertDialog:s}=a,t=c(a,["__scopeAlertDialog"]),r=F(s);return p.jsx(v,i(n(n({},r),t),{modal:!0}))};I.displayName=O;var $=d.forwardRef((e,a)=>{const s=e,{__scopeAlertDialog:t}=s,r=c(s,["__scopeAlertDialog"]),o=F(t);return p.jsx(D,i(n(n({},o),r),{ref:a}))});$.displayName="AlertDialogTrigger";var k=e=>{const a=e,{__scopeAlertDialog:s}=a,t=c(a,["__scopeAlertDialog"]),r=F(s);return p.jsx(A,n(n({},r),t))};k.displayName="AlertDialogPortal";var C=d.forwardRef((e,a)=>{const s=e,{__scopeAlertDialog:t}=s,r=c(s,["__scopeAlertDialog"]),o=F(t);return p.jsx(R,i(n(n({},o),r),{ref:a}))});C.displayName="AlertDialogOverlay";var E="AlertDialogContent",[S,T]=P(E),q=g("AlertDialogContent"),B=d.forwardRef((e,a)=>{const s=e,{__scopeAlertDialog:t,children:r}=s,o=c(s,["__scopeAlertDialog","children"]),l=F(t),m=d.useRef(null),g=f(a,m),N=d.useRef(null);return p.jsx(_,{contentName:E,titleName:H,docsSlug:"alert-dialog",children:p.jsx(S,{scope:t,cancelRef:N,children:p.jsxs(j,i(n(n({role:"alertdialog"},l),o),{ref:g,onOpenAutoFocus:u(o.onOpenAutoFocus,e=>{var a;e.preventDefault(),null==(a=N.current)||a.focus({preventScroll:!0})}),onPointerDownOutside:e=>e.preventDefault(),onInteractOutside:e=>e.preventDefault(),children:[p.jsx(q,{children:r}),p.jsx(M,{contentRef:m})]}))})})});B.displayName=E;var H="AlertDialogTitle",W=d.forwardRef((e,a)=>{const s=e,{__scopeAlertDialog:t}=s,r=c(s,["__scopeAlertDialog"]),o=F(t);return p.jsx(b,i(n(n({},o),r),{ref:a}))});W.displayName=H;var Y="AlertDialogDescription",G=d.forwardRef((e,a)=>{const s=e,{__scopeAlertDialog:t}=s,r=c(s,["__scopeAlertDialog"]),o=F(t);return p.jsx(w,i(n(n({},o),r),{ref:a}))});G.displayName=Y;var J=d.forwardRef((e,a)=>{const s=e,{__scopeAlertDialog:t}=s,r=c(s,["__scopeAlertDialog"]),o=F(t);return p.jsx(h,i(n(n({},o),r),{ref:a}))});J.displayName="AlertDialogAction";var K="AlertDialogCancel",L=d.forwardRef((e,a)=>{const s=e,{__scopeAlertDialog:t}=s,r=c(s,["__scopeAlertDialog"]),{cancelRef:o}=T(K,t),l=F(t),d=f(a,o);return p.jsx(h,i(n(n({},l),r),{ref:d}))});L.displayName=K;var M=({contentRef:e})=>{const a=`\`${E}\` requires a description for the component to be accessible for screen reader users.\n\nYou can add a description to the \`${E}\` by passing a \`${Y}\` component as a child, which also benefits sighted users by adding visible context to the dialog.\n\nAlternatively, you can use your own component as a description by assigning it an \`id\` and passing the same value to the \`aria-describedby\` prop in \`${E}\`. If the description is confusing or duplicative for sighted users, you can use the \`@radix-ui/react-visually-hidden\` primitive as a wrapper around your description component.\n\nFor more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;return d.useEffect(()=>{var a;document.getElementById(null==(a=e.current)?void 0:a.getAttribute("aria-describedby"))},[a,e]),null},Q=C,U=B,V=J,X=L,Z=W,ee=G;const ae=I,se=$,te=k,re=React.forwardRef((e,a)=>{var s=e,{className:t}=s,r=c(s,["className"]);return p.jsx(Q,i(n({className:N("fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",t)},r),{ref:a}))});re.displayName=Q.displayName;const oe=React.forwardRef((e,a)=>{var s=e,{className:t}=s,r=c(s,["className"]);return p.jsxs(te,{children:[p.jsx(re,{}),p.jsx(U,n({ref:a,className:N("fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",t)},r))]})});oe.displayName=U.displayName;const le=e=>{var a=e,{className:s}=a,t=c(a,["className"]);return p.jsx("div",n({className:N("flex flex-col space-y-2 text-center sm:text-left",s)},t))};le.displayName="AlertDialogHeader";const ne=e=>{var a=e,{className:s}=a,t=c(a,["className"]);return p.jsx("div",n({className:N("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",s)},t))};ne.displayName="AlertDialogFooter";const ie=React.forwardRef((e,a)=>{var s=e,{className:t}=s,r=c(s,["className"]);return p.jsx(Z,n({ref:a,className:N("text-lg font-semibold",t)},r))});ie.displayName=Z.displayName;const ce=React.forwardRef((e,a)=>{var s=e,{className:t}=s,r=c(s,["className"]);return p.jsx(ee,n({ref:a,className:N("text-sm text-muted-foreground",t)},r))});ce.displayName=ee.displayName;const de=React.forwardRef((e,a)=>{var s=e,{className:t}=s,r=c(s,["className"]);return p.jsx(V,n({ref:a,className:N(y(),t)},r))});de.displayName=V.displayName;const pe=React.forwardRef((e,a)=>{var s=e,{className:t}=s,r=c(s,["className"]);return p.jsx(X,n({ref:a,className:N(y({variant:"outline"}),"mt-2 sm:mt-0",t)},r))});pe.displayName=X.displayName;export{ae as A,se as a,oe as b,le as c,ie as d,ce as e,ne as f,pe as g,de as h};
