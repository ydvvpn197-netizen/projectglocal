var U=Object.defineProperty,v=Object.defineProperties;var P=Object.getOwnPropertyDescriptors;var w=Object.getOwnPropertySymbols;var k=Object.prototype.hasOwnProperty,L=Object.prototype.propertyIsEnumerable;var h=(a,t,e)=>t in a?U(a,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):a[t]=e,d=(a,t)=>{for(var e in t||(t={}))k.call(t,e)&&h(a,e,t[e]);if(w)for(var e of w(t))L.call(t,e)&&h(a,e,t[e]);return a},m=(a,t)=>v(a,P(t));var y=(a,t,e)=>h(a,typeof t!="symbol"?t+"":t,e);var s=(a,t,e)=>new Promise((r,o)=>{var c=l=>{try{f(e.next(l))}catch(g){o(g)}},i=l=>{try{f(e.throw(l))}catch(g){o(g)}},f=l=>l.done?r(l.value):Promise.resolve(l.value).then(c,i);f((e=e.apply(a,t)).next())});import{ac as E,s as n}from"./main-jfCIwKxb.js";import{d as $,f as u}from"./databaseUtils-Cc-GydU0.js";function A(){return new Promise((a,t)=>{if(!navigator.geolocation){t(new Error("Geolocation is not supported by this browser"));return}navigator.geolocation.getCurrentPosition(e=>{const r={lat:e.coords.latitude,lng:e.coords.longitude};a(r)},e=>{t(new Error(`Geolocation error: ${e.message}`))},{enableHighAccuracy:!0,timeout:1e4,maximumAge:3e5})})}function C(a,t){return s(this,null,function*(){try{const e=E.apiKey;if(!e)throw new Error("Google Maps API key not configured");const r=yield fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${a},${t}&key=${e}`);if(!r.ok)throw new Error("Failed to fetch geocoding data");const o=yield r.json();if(o.status==="OK"&&o.results.length>0)return o.results[0].formatted_address;throw new Error("No results found for coordinates")}catch(e){return console.error("Reverse geocoding error:",e),`${a.toFixed(6)}, ${t.toFixed(6)}`}})}function S(a,t){return s(this,null,function*(){try{const e=E.apiKey;if(!e)throw new Error("Google Maps API key not configured");let r=`https://maps.googleapis.com/maps/api/place/textsearch/json?query=${encodeURIComponent(a)}&key=${e}`;t&&(r+=`&location=${t.lat},${t.lng}&radius=50000`);const o=yield fetch(r);if(!o.ok)throw new Error("Failed to fetch places data");const c=yield o.json();if(c.status==="OK")return c.results.map(i=>({id:i.place_id,name:i.name,address:i.formatted_address,lat:i.geometry.location.lat,lng:i.geometry.location.lng}));throw new Error(`Places API error: ${c.status}`)}catch(e){return console.error("Places search error:",e),[]}})}function p(a,t){return s(this,null,function*(){try{const e=yield C(a,t),r=e.split(",");return r.length>=2?r[1].trim():e}catch(e){return console.error("Error getting location name:",e),`${a.toFixed(4)}, ${t.toFixed(4)}`}})}function _(a,t,e=3e5){try{const r={data:t,timestamp:Date.now(),ttl:e};localStorage.setItem(`location_cache_${a}`,JSON.stringify(r))}catch(r){console.error("Error caching location data:",r)}}function T(a){try{const t=localStorage.getItem(`location_cache_${a}`);if(!t)return null;const e=JSON.parse(t);return Date.now()-e.timestamp>e.ttl?(localStorage.removeItem(`location_cache_${a}`),null):e.data}catch(t){return console.error("Error getting cached location data:",t),null}}function b(){try{Object.keys(localStorage).forEach(t=>{t.startsWith("location_cache_")&&localStorage.removeItem(t)})}catch(a){console.error("Error clearing location cache:",a)}}class q{static checkUserPreferencesTable(){return s(this,null,function*(){if(this.userPreferencesTableAvailable!==null)return this.userPreferencesTableAvailable;try{const t=yield $("user_preferences");return this.userPreferencesTableAvailable=t.exists,this.userPreferencesTableAvailable?console.log("User preferences table is available and accessible."):console.warn("User preferences table not available. Using fallback preferences."),this.userPreferencesTableAvailable}catch(t){return console.error("Error checking user preferences table:",t),this.userPreferencesTableAvailable=!1,!1}})}static getCurrentUserLocation(){return s(this,null,function*(){try{const{data:{user:t}}=yield n.auth.getUser();if(!t)return null;const e=T(`user_${t.id}`);if(e)return e;const{data:r}=yield n.from("profiles").select("latitude, longitude, real_time_location_enabled, location_city, location_state, location_country").eq("user_id",t.id).single();if(r&&r.latitude&&r.longitude){const o={lat:r.latitude,lng:r.longitude,name:r.location_city?`${r.location_city}, ${r.location_state||""}`.trim():void 0};return _(`user_${t.id}`,o),o}return null}catch(t){return console.error("Error getting current user location:",t),null}})}static getUserLocationPreferences(){return s(this,null,function*(){try{if(!(yield this.checkUserPreferencesTable()))return console.warn("User preferences table not available. Using fallback preferences."),u();const{data:{user:e}}=yield n.auth.getUser();if(!e)return u();const{data:r,error:o}=yield n.from("user_preferences").select("*").eq("user_id",e.id).single();if(o&&o.code!=="PGRST116")return console.error("Error fetching user preferences:",o),u();if(!r){const c=u();return yield this.saveUserLocationPreferences(c),c}return d(d({},u()),r)}catch(t){return console.error("Error getting user location preferences:",t),u()}})}static saveUserLocationPreferences(t){return s(this,null,function*(){try{if(!(yield this.checkUserPreferencesTable()))return console.warn("User preferences table not available. Preferences not saved."),!1;const{data:{user:r}}=yield n.auth.getUser();if(!r)throw new Error("User not authenticated");const{error:o}=yield n.from("user_preferences").upsert(m(d({user_id:r.id},t),{updated_at:new Date().toISOString()}),{onConflict:"user_id"});if(o)throw o;return!0}catch(e){return console.error("Error saving user location preferences:",e),!1}})}static detectAndSaveLocation(){return s(this,null,function*(){try{const{data:{user:t}}=yield n.auth.getUser();if(!t)throw new Error("User not authenticated");const e=yield A(),r=yield p(e.lat,e.lng);e.name=r;const{error:o}=yield n.rpc("update_user_location",{user_uuid:t.id,lat:e.lat,lng:e.lng,location_name:r});if(o)throw o;return _(`user_${t.id}`,e),e}catch(t){return console.error("Error detecting and saving location:",t),null}})}static setManualLocation(t){return s(this,null,function*(){try{const{data:{user:e}}=yield n.auth.getUser();if(!e)throw new Error("User not authenticated");const{error:r}=yield n.rpc("update_user_location",{user_uuid:e.id,lat:t.lat,lng:t.lng,location_name:t.name||null});if(r)throw r;_(`user_${e.id}`,t)}catch(e){throw console.error("Error setting manual location:",e),e}})}static getUserPreferences(){return s(this,null,function*(){try{const{data:{user:t}}=yield n.auth.getUser();if(!t)return null;const{data:e,error:r}=yield n.from("user_preferences").select("*").eq("user_id",t.id).single();if(r&&r.code!=="PGRST116")throw r;return e}catch(t){return console.error("Error getting user preferences:",t),null}})}static updateUserPreferences(t){return s(this,null,function*(){try{const{data:{user:e}}=yield n.auth.getUser();if(!e)throw new Error("User not authenticated");const{error:r}=yield n.from("user_preferences").upsert(d({user_id:e.id},t));if(r)throw r}catch(e){throw console.error("Error updating user preferences:",e),e}})}static getLocationSettings(){return s(this,null,function*(){var t,e;try{const{data:{user:r}}=yield n.auth.getUser();if(!r)throw new Error("User not authenticated");const[o,c]=yield Promise.all([n.from("profiles").select("real_time_location_enabled").eq("user_id",r.id).single(),this.getUserLocationPreferences()]);return{enabled:(e=(t=o.data)==null?void 0:t.real_time_location_enabled)!=null?e:!1,auto_detect:!0,radius_km:(c==null?void 0:c.location_radius_km)||50,categories:c!=null&&c.category?[c.category]:[],notifications:(c==null?void 0:c.location_notifications)||!0}}catch(r){return console.error("Error getting location settings:",r),{enabled:!1,auto_detect:!0,radius_km:50,categories:[],notifications:!0}}})}static updateLocationSettings(t){return s(this,null,function*(){var e;try{const{data:{user:r}}=yield n.auth.getUser();if(!r)throw new Error("User not authenticated");if(t.enabled!==void 0){const{error:o}=yield n.from("profiles").update({real_time_location_enabled:t.enabled}).eq("user_id",r.id);if(o)throw o}(t.radius_km!==void 0||t.categories!==void 0||t.notifications!==void 0)&&(yield this.saveUserLocationPreferences({location_radius_km:t.radius_km,category:((e=t.categories)==null?void 0:e[0])||"general",location_notifications:t.notifications})),b()}catch(r){throw console.error("Error updating location settings:",r),r}})}static getNearbyContent(t=50,e){return s(this,null,function*(){try{const r=yield this.getCurrentUserLocation();if(!r)return[];const{data:o,error:c}=yield n.rpc("get_nearby_content",{user_lat:r.lat,user_lng:r.lng,radius_km:t,content_type_filter:e||null});if(c)throw c;return o||[]}catch(r){return console.error("Error getting nearby content:",r),[]}})}static addContentLocation(t){return s(this,null,function*(){try{const{error:e}=yield n.from("content_location").insert(t);if(e)throw e}catch(e){throw console.error("Error adding content location:",e),e}})}static updateContentLocation(t,e,r){return s(this,null,function*(){try{const{error:o}=yield n.from("content_location").update(r).eq("content_type",t).eq("content_id",e);if(o)throw o}catch(o){throw console.error("Error updating content location:",o),o}})}static removeContentLocation(t,e){return s(this,null,function*(){try{const{error:r}=yield n.from("content_location").delete().eq("content_type",t).eq("content_id",e);if(r)throw r}catch(r){throw console.error("Error removing content location:",r),r}})}static searchPlaces(t,e){return s(this,null,function*(){return S(t,e)})}static getLocationName(t,e){return s(this,null,function*(){return p(t,e)})}static toggleLocationServices(t){return s(this,null,function*(){try{const{data:{user:e}}=yield n.auth.getUser();if(!e)throw new Error("User not authenticated");const{error:r}=yield n.from("profiles").update({location_enabled:t,real_time_location_enabled:t}).eq("id",e.id);if(r)throw r;t||b()}catch(e){throw console.error("Error toggling location services:",e),e}})}static getLocationStats(){return s(this,null,function*(){try{const t=yield this.getCurrentUserLocation(),e=yield this.getUserLocationPreferences();if(!t)return{total_content:0,nearby_content:0,user_radius_km:(e==null?void 0:e.location_radius_km)||50};const r=yield this.getNearbyContent((e==null?void 0:e.location_radius_km)||50),{count:o}=yield n.from("content_location").select("*",{count:"exact",head:!0});return{total_content:o||0,nearby_content:r.length,user_radius_km:(e==null?void 0:e.location_radius_km)||50}}catch(t){return console.error("Error getting location stats:",t),{total_content:0,nearby_content:0,user_radius_km:50}}})}}y(q,"userPreferencesTableAvailable",null);export{q as L};
