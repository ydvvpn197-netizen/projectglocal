var m=Object.defineProperty,v=Object.defineProperties;var A=Object.getOwnPropertyDescriptors;var p=Object.getOwnPropertySymbols;var k=Object.prototype.hasOwnProperty,N=Object.prototype.propertyIsEnumerable;var b=(c,e,t)=>e in c?m(c,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):c[e]=t,g=(c,e)=>{for(var t in e||(e={}))k.call(e,t)&&b(c,t,e[t]);if(p)for(var t of p(e))N.call(e,t)&&b(c,t,e[t]);return c},d=(c,e)=>v(c,A(e));var h=(c,e,t)=>b(c,typeof e!="symbol"?e+"":e,t);var o=(c,e,t)=>new Promise((a,r)=>{var i=s=>{try{l(t.next(s))}catch(f){r(f)}},n=s=>{try{l(t.throw(s))}catch(f){r(f)}},l=s=>s.done?a(s.value):Promise.resolve(s.value).then(i,n);l((t=t.apply(c,e)).next())});import{s as u}from"./main-nj8_qmr1.js";const w=[{id:"fallback-1",title:"Welcome to The Glocal! 🎉",message:"Join our community to discover amazing local events, connect with artists, and build meaningful relationships with your neighbors.",type:"announcement",priority:"high",created_at:new Date().toISOString(),is_active:!0,target_audience:"all",action_url:"/signin",action_text:"Get Started"},{id:"fallback-2",title:"New Feature: Artist Booking System",message:"You can now book local artists directly through our platform. Support local talent and make your events unforgettable!",type:"system",priority:"medium",created_at:new Date().toISOString(),is_active:!0,target_audience:"all",action_url:"/book-artist",action_text:"Book an Artist"}];class R{constructor(){h(this,"isDatabaseAvailable",!0);h(this,"cache",new Map);h(this,"CACHE_TTL",3e4);h(this,"retryAttempts",new Map);h(this,"MAX_RETRY_ATTEMPTS",3)}checkDatabaseAvailability(){return o(this,null,function*(){if(!this.isDatabaseAvailable)return!1;try{const{error:e}=yield u.from("general_notifications").select("id").limit(1);return e&&e.code==="42P01"?(this.isDatabaseAvailable=!1,!1):!0}catch(e){return this.isDatabaseAvailable=!1,!1}})}getCachedData(e){const t=this.cache.get(e);return t&&Date.now()-t.timestamp<this.CACHE_TTL?t.data:(this.cache.delete(e),null)}setCachedData(e,t){this.cache.set(e,{data:t,timestamp:Date.now()})}clearCache(){this.cache.clear()}clearUserCache(e){const t=[];for(const a of this.cache.keys())a.includes(e)&&t.push(a);t.forEach(a=>this.cache.delete(a))}withRetry(r,i){return o(this,arguments,function*(e,t,a=this.MAX_RETRY_ATTEMPTS){let n=this.retryAttempts.get(t)||0;try{const l=yield e();return this.retryAttempts.delete(t),l}catch(l){if(n++,this.retryAttempts.set(t,n),n>=a)throw this.retryAttempts.delete(t),l;const s=Math.pow(2,n)*1e3;return yield new Promise(f=>setTimeout(f,s)),this.withRetry(e,t,a)}})}getGeneralNotifications(e=10){return o(this,null,function*(){const t=`general_notifications_${e}`,a=this.getCachedData(t);if(a)return a;try{if(!(yield this.checkDatabaseAvailability()))return w;const i=yield this.withRetry(()=>o(this,null,function*(){const{data:n,error:l}=yield u.from("general_notifications").select("*").eq("is_active",!0).lte("created_at",new Date().toISOString()).or(`expires_at.is.null,expires_at.gt.${new Date().toISOString()}`).order("created_at",{ascending:!1}).limit(e);if(l)throw l;return n||w}),`getGeneralNotifications_${e}`);return this.setCachedData(t,i),i}catch(r){return console.warn("Error fetching general notifications:",r),w}})}getPersonalNotifications(e,t=20){return o(this,null,function*(){if(!e)return[];const a=`personal_notifications_${e}_${t}`,r=this.getCachedData(a);if(r)return r;try{if(!(yield this.checkDatabaseAvailability()))return[];const n=yield this.withRetry(()=>o(this,null,function*(){const{data:l,error:s}=yield u.from("personal_notifications").select("*").eq("user_id",e).order("created_at",{ascending:!1}).limit(t);if(s)throw s;return l||[]}),`getPersonalNotifications_${e}_${t}`);return this.setCachedData(a,n),n}catch(i){return console.warn("Error fetching personal notifications:",i),[]}})}getNotificationCounts(e){return o(this,null,function*(){if(!e)return{general:0,personal:0,total:0};try{if(!(yield this.checkDatabaseAvailability()))return{general:0,personal:0,total:0};let a=0,r=0;try{const{count:i}=yield u.from("general_notifications").select("*",{count:"exact",head:!0}).eq("is_active",!0).lte("created_at",new Date().toISOString()).or(`expires_at.is.null,expires_at.gt.${new Date().toISOString()}`);a=i||0}catch(i){console.warn("Error counting general notifications:",i),a=0}try{const{count:i}=yield u.from("personal_notifications").select("*",{count:"exact",head:!0}).eq("user_id",e).eq("read",!1);r=i||0}catch(i){console.warn("Error counting personal notifications:",i),r=0}return{general:a,personal:r,total:a+r}}catch(t){return console.warn("Error getting notification counts:",t),{general:0,personal:0,total:0}}})}markAsRead(e,t){return o(this,null,function*(){if(!t)return!1;try{if(!(yield this.checkDatabaseAvailability()))return!0;const r=yield this.withRetry(()=>o(this,null,function*(){const{error:i}=yield u.from("personal_notifications").update({read:!0}).eq("id",e).eq("user_id",t);if(i)throw i;return!0}),`markAsRead_${e}_${t}`);return this.clearUserCache(t),r}catch(a){return console.warn("Error marking notification as read:",a),!1}})}markAllAsRead(e){return o(this,null,function*(){if(!e)return!1;try{if(!(yield this.checkDatabaseAvailability()))return!0;const{error:a}=yield u.from("personal_notifications").update({read:!0}).eq("user_id",e).eq("read",!1);return a?(console.warn("Error marking all notifications as read:",a),!1):!0}catch(t){return console.warn("Error marking all notifications as read:",t),!1}})}deleteNotification(e,t){return o(this,null,function*(){if(!t)return!1;try{if(!(yield this.checkDatabaseAvailability()))return!0;const{error:r}=yield u.from("personal_notifications").delete().eq("id",e).eq("user_id",t);return r?(console.warn("Error deleting notification:",r),!1):!0}catch(a){return console.warn("Error deleting notification:",a),!1}})}createPersonalNotification(e,t,a,r,i,n,l){return o(this,null,function*(){if(!e)return console.warn("Cannot create notification: no user ID provided"),null;try{if(!(yield this.checkDatabaseAvailability()))return console.warn("Database not available, notification not created"),null;const f=yield this.withRetry(()=>o(this,null,function*(){const{data:y,error:_}=yield u.from("personal_notifications").insert({user_id:e,title:t,message:a,type:r,data:i,action_url:n,action_text:l}).select("id").single();if(_)throw _;return y.id}),`createPersonalNotification_${e}`);return this.clearUserCache(e),f}catch(s){return console.warn("Error creating personal notification:",s),null}})}subscribeToNotifications(e,t){if(!e)return console.warn("Cannot subscribe to notifications: no user ID provided"),()=>{};try{this.checkDatabaseAvailability().then(i=>{if(!i){console.warn("Database not available, real-time subscription disabled");return}}).catch(()=>{console.warn("Database check failed, real-time subscription disabled")});const a=u.channel(`personal_notifications_${e}`,{config:{broadcast:{self:!1},presence:{key:e}}}).on("postgres_changes",{event:"*",schema:"public",table:"personal_notifications",filter:`user_id=eq.${e}`},i=>{try{const n=d(g({},i),{eventType:i.eventType,table:i.table,timestamp:new Date().toISOString(),userId:e});t(n)}catch(n){console.error("Error processing real-time notification:",n)}}).on("system",{},i=>{i==="CHANNEL_ERROR"&&console.warn("Personal notifications subscription error, attempting reconnection...")}).subscribe(i=>{i==="SUBSCRIBED"?console.log("✅ Personal notifications subscription active"):i==="CHANNEL_ERROR"&&console.warn("⚠️ Personal notifications subscription failed - using fallback mode")}),r=u.channel("general_notifications",{config:{broadcast:{self:!1}}}).on("postgres_changes",{event:"*",schema:"public",table:"general_notifications"},i=>{try{const n=d(g({},i),{eventType:i.eventType,table:i.table,timestamp:new Date().toISOString()});t(n)}catch(n){console.error("Error processing real-time general notification:",n)}}).on("system",{},i=>{i==="CHANNEL_ERROR"&&console.warn("General notifications subscription error, attempting reconnection...")}).subscribe(i=>{i==="SUBSCRIBED"?console.log("✅ General notifications subscription active"):i==="CHANNEL_ERROR"&&console.warn("⚠️ General notifications subscription failed - using fallback mode")});return()=>{try{a.unsubscribe(),r.unsubscribe(),console.log("🔌 Notification subscriptions unsubscribed")}catch(i){console.error("Error unsubscribing from notifications:",i)}}}catch(a){return console.warn("Error setting up notification subscriptions:",a),()=>{}}}createNotification(e){return o(this,null,function*(){return this.createPersonalNotification(e.user_id,e.title,e.message,e.type,e.data,e.action_url,e.action_text)})}createBookingRequestNotification(e,t,a){return o(this,null,function*(){return this.createPersonalNotification(e,"New Booking Request",`You have a new booking request for ${a.event_type} on ${new Date(a.event_date).toLocaleDateString()}`,"booking_request",{bookingData:a,clientId:t},"/artist-dashboard","View Request")})}createBookingResponseNotification(e,t){return o(this,null,function*(){const{data:a,error:r}=yield u.from("artist_bookings").select(`
        *,
        profiles!artist_bookings_user_id_fkey(display_name, avatar_url)
      `).eq("id",e).single();if(r||!a)return console.error("Error fetching booking details for notification:",r),null;const i=t==="accepted"?"accepted":"declined",n=a.event_description||"your event";return this.createPersonalNotification(a.user_id,`Booking ${i.charAt(0).toUpperCase()+i.slice(1)}`,`Your booking request for ${n} has been ${i} by the artist.`,`booking_${t}`,{bookingId:e,bookingData:{event_date:a.event_date,event_location:a.event_location,event_description:a.event_description,budget_min:a.budget_min,budget_max:a.budget_max}},t==="accepted"?"/messages":"/bookings",t==="accepted"?"Start Chat":"View Details")})}createNewFollowerNotification(e,t){return o(this,null,function*(){return this.createPersonalNotification(e,"New Follower","You have a new follower!","new_follower",{followerId:t},"/profile","View Profile")})}createMessageRequestNotification(e,t,a){return o(this,null,function*(){return this.createPersonalNotification(e,"New Message","You have received a new message","message_request",{senderId:t,conversationId:a},"/messages","View Message")})}createEventReminderNotification(e,t){return o(this,null,function*(){return this.createPersonalNotification(e,"Event Reminder",`Don't forget about ${t.title} tomorrow!`,"event_reminder",{eventData:t},`/events/${t.id}`,"View Event")})}createDiscussionRequestNotification(e,t,a){return o(this,null,function*(){return this.createPersonalNotification(e,"New Discussion Request","Someone has requested to start a discussion with you","discussion_request",{discussionData:a,userId:t},"/artist-dashboard","Review Request")})}}const S=new R;export{S as n};
